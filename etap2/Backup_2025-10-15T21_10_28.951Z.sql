CREATE TYPE "unit_of_mesurement" AS ENUM (
	'g',
	'ml',
	'kg',
	'l',
	'piece'
);

CREATE TABLE IF NOT EXISTS "customer" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL UNIQUE,
	"default_address" INTEGER,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "order" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"status" VARCHAR(25) NOT NULL DEFAULT 'accepted',
	"vat_rate" NUMERIC(6,4) NOT NULL,
	"vat_total" NUMERIC(18,2) NOT NULL,
	"net_total" NUMERIC(18,2) NOT NULL,
	"gross_total" NUMERIC(18,2) NOT NULL,
	"placed_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
	"customer_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "order_item" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"expected_delivery_at" TIMESTAMPTZ NOT NULL,
	"order_id" INTEGER NOT NULL,
	"delivery_address" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "address" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"country" TEXT NOT NULL,
	"region" TEXT,
	"postal_code" VARCHAR(16) NOT NULL,
	"city" TEXT NOT NULL,
	"street_name" TEXT NOT NULL,
	"street_number" VARCHAR(8) NOT NULL,
	"apartment" VARCHAR(8),
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
	"deleted_at" TIMESTAMPTZ,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "invoice" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"invoice_number" TEXT NOT NULL UNIQUE,
	"status" VARCHAR(25) NOT NULL DEFAULT 'issued',
	"seller_name" TEXT NOT NULL,
	-- NIP
	"seller_vat_id" VARCHAR(20) NOT NULL,
	"buyer_name" TEXT NOT NULL,
	"buyer_vat_id" VARCHAR(20),
	"currency" CHAR(3) NOT NULL,
	"payment_method" VARCHAR(25) NOT NULL,
	"payment_terms" TEXT,
	"sale_date" DATE NOT NULL,
	"payment_date" DATE NOT NULL,
	"issue_date" DATE NOT NULL,
	"net_total" NUMERIC(18,2) NOT NULL,
	"vat_total" NUMERIC(18,2) NOT NULL,
	"gross_total" NUMERIC(18,2) NOT NULL,
	"order_id" INTEGER NOT NULL,
	"seller_address_id" INTEGER NOT NULL,
	"buyer_address_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


COMMENT ON COLUMN "invoice"."seller_vat_id" IS 'NIP';


CREATE TABLE IF NOT EXISTS "course" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	"description" TEXT NOT NULL,
	"price" DECIMAL(5,2) NOT NULL,
	"category_id" INTEGER NOT NULL,
	"protein_100g" REAL NOT NULL,
	"calories_100g" INTEGER NOT NULL,
	"carbohydrates_100g" REAL NOT NULL,
	"fat_100g" REAL NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "course_in_order_item" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"course_id" INTEGER NOT NULL,
	"order_item_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "user" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "invoice_item" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"line_number" INTEGER NOT NULL,
	"name" TEXT NOT NULL,
	"description" TEXT,
	"quantity" NUMERIC(18,6) NOT NULL,
	"unit" VARCHAR(16) NOT NULL,
	"vat_rate" NUMERIC(6,4) NOT NULL,
	"vat_amount" NUMERIC(18,2) NOT NULL,
	"net_amount" NUMERIC(18,2) NOT NULL,
	"gross_amount" NUMERIC(18,2) NOT NULL,
	"invoice_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "allergen" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	"description" TEXT,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "preference" (
	"customer_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"ingredient_id" INTEGER NOT NULL,
	"rating" INTEGER NOT NULL
);




CREATE TABLE IF NOT EXISTS "opinion" (
	"course_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"customer_id" INTEGER NOT NULL,
	"rating" INTEGER NOT NULL,
	"opinion" TEXT
);




CREATE TABLE IF NOT EXISTS "ingredient" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	"description" TEXT,
	"calories_100g" INTEGER NOT NULL,
	"unit_of_measure" UNIT_OF_MESUREMENT NOT NULL,
	"protein_100g" REAL NOT NULL,
	"fat_100g" REAL NOT NULL,
	"carbohydrates_100g" REAL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "course_ingredient" (
	"ingredient_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"course_id" INTEGER NOT NULL
);




CREATE TABLE IF NOT EXISTS "allergen_customer" (
	"allergen_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"customer_id" INTEGER NOT NULL
);




CREATE TABLE IF NOT EXISTS "allergen_ingredient" (
	"allergen_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"ingredient_id" INTEGER NOT NULL
);



ALTER TABLE "customer"
ADD FOREIGN KEY("default_address") REFERENCES "address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "order"
ADD FOREIGN KEY("customer_id") REFERENCES "customer"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "order_item"
ADD FOREIGN KEY("delivery_address") REFERENCES "address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "customer"
ADD FOREIGN KEY("user_id") REFERENCES "user"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "course_in_order_item"
ADD FOREIGN KEY("course_id") REFERENCES "course"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "course_in_order_item"
ADD FOREIGN KEY("order_item_id") REFERENCES "order_item"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoice"
ADD FOREIGN KEY("order_id") REFERENCES "order"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoice"
ADD FOREIGN KEY("seller_address_id") REFERENCES "address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoice"
ADD FOREIGN KEY("buyer_address_id") REFERENCES "address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoice_item"
ADD FOREIGN KEY("invoice_id") REFERENCES "invoice"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "order_item"
ADD FOREIGN KEY("order_id") REFERENCES "order"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ingredient"
ADD FOREIGN KEY("id") REFERENCES "course_ingredient"("ingredient_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "course"
ADD FOREIGN KEY("id") REFERENCES "course_ingredient"("course_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "customer"
ADD FOREIGN KEY("id") REFERENCES "opinion"("customer_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "course"
ADD FOREIGN KEY("id") REFERENCES "opinion"("course_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "customer"
ADD FOREIGN KEY("id") REFERENCES "preference"("customer_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "preference"
ADD FOREIGN KEY("ingredient_id") REFERENCES "ingredient"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "allergen"
ADD FOREIGN KEY("id") REFERENCES "allergen_customer"("allergen_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "customer"
ADD FOREIGN KEY("id") REFERENCES "allergen_customer"("customer_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "allergen"
ADD FOREIGN KEY("id") REFERENCES "allergen_ingredient"("allergen_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ingredient"
ADD FOREIGN KEY("id") REFERENCES "allergen_ingredient"("ingredient_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;